.slides {
    display: grid;
    position: relative;
    justify-content: center;

    *,
    *::before,
    *::after {
        box-sizing: border-box;
        // position: relative
    }
}

.slides>.slide {
    grid-area: 1/-1;
    cursor: pointer;
}

.slides>button {
    appearance: none;
    background: transparent;
    border: none;
    color: #fff;
    position: absolute;
    font-size: 5rem;
    width: 5rem;
    height: 5rem;
    top: 30%;
    transition: opacity .3s;
    opacity: .7;
    z-index: 11;
    cursor: pointer;
}

.slides>button:hover {
    opacity: 1
}

.slides>button:focus {
    outline: none
}

.slides>button:first-child {
    left: -5%
}

.slides>button:last-child {
    right: -5%
}

.slideContent {
    width: 20vw;
    height: 20vw;
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;
    transition: transform .5s ease-in-out;
    opacity: .7;
    display: grid;
    align-content: center;
    transform-style: preserve-3d;
    transform: perspective(1000px) translateX(calc(100% * var(--offset))) rotateY(calc(-45deg * var(--dir)));

    @media(max-width: 1300px) {
        width: 50vw !important;
        height: 30vh !important
    }
}



.slideContentInner {
    transform-style: preserve-3d;
    transform: translateZ(2rem);
    transition: opacity .3s linear;
    text-shadow: 0 .1rem 1rem #000;
    opacity: 0
}

.slideContentInner .slideSubtitle,
.slideContentInner .slideTitle {
    font-size: 2rem;
    font-weight: normal;
    letter-spacing: .2ch;
    text-transform: uppercase;
    color: rgb(6, 6, 240);
    margin: 0
}

.slideContentInner .slideSubtitle::before {
    content: "â€” "
}

.slideContentInner .slideDescription {
    margin: 0;
    font-size: .8rem;
    letter-spacing: .2ch;
    color: white;
}

.slideBackground {
    position: fixed;
    top: 0;
    left: -10%;
    right: -10%;
    bottom: 0;
    background-size: cover;
    background-position: center center;
    z-index: -1;
    opacity: 0;
    transition: opacity .3s linear, transform .3s ease-in-out;
    pointer-events: none;
    transform: translateX(calc(10% * var(--dir)))
}

.slide[data-active] {
    z-index: 2;
    pointer-events: auto
}

.slide[data-active] .slideBackground {
    opacity: .2;
    transform: none
}

.slide[data-active] .slideContentInner {
    opacity: 1
}

@media(min-width: 1300px) {
    .slide[data-active] .slideContent {
        --x: calc(var(--px) - 0.5);
        --y: calc(var(--py) - 0.5);
        opacity: 1;
        transform: perspective(1000px)
    }

    .slide[data-active] .slideContent:hover {
        transition: none;
        transform: perspective(1000px) rotateY(calc(var(--x) * 45deg)) rotateX(calc(var(--y) * -45deg))
    }
}